rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - allow authenticated users to manage their own documents
    match /users/{userId} {
      // Allow any authenticated user to create a user document (for registration)
      allow create: if request.auth != null;
      // Allow users to read/write their own document
      allow read, write, update, delete: if request.auth != null && request.auth.uid == userId;
      // Allow reading for referral code verification (even without auth)
      allow read: if true;
    }
    
    // Providers collection - providers can read/write their own document
    match /providers/{providerId} {
      allow read, write: if request.auth != null && request.auth.uid == providerId;
      // Allow all authenticated users to read provider documents for browsing
      allow read: if request.auth != null;
      // Allow reading for duplicate check during registration (even without auth)
      allow read: if true;
      // Allow users to update referred_by_user_ids when processing referral codes
      allow update: if request.auth != null && 
                   request.writeFields.hasOnly(['referred_by_user_ids']) &&
                   request.auth.uid in request.resource.data.referred_by_user_ids;
    }
    
    // User requests - new unified collection
    match /user_requests/{requestId} {
      allow create: if request.auth != null;
      // Users can read their own requests, providers can read requests in certain statuses
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         resource.data.status in ['pending', 'matched', 'bidding', 'assigned']); 
      // Users can update their own requests, system can update for matching/bidding
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         resource.data.status in ['pending', 'matched', 'bidding', 'assigned']);
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Service bids - providers can create bids, users can read bids for their requests
    match /service_bids/{bidId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.providerId || 
         request.auth.uid == resource.data.userId);
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.providerId || 
         request.auth.uid == resource.data.userId);
    }
    
    // Bidding sessions - users and providers can read sessions for their requests
    match /bidding_sessions/{sessionId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid in resource.data.notifiedProviders);
      allow update: if request.auth != null;
    }
    
    // Reviews collection - allow authenticated users to create and read
    match /reviews/{reviewId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // General fallback for other collections
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}